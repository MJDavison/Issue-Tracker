@model IssueTracker.MVC.ViewModels.Projects.DetailsViewModel
@using IssueTracker.MVC.ViewModels.Projects
@using IssueTracker.MVC.Data
@using Microsoft.EntityFrameworkCore;
@inject ApplicationDbContext dbContext;
@{
    ViewData["Title"] = "Details";
}
<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h2>Details for @Html.DisplayFor(model => model.Name)</h2>
                    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
                    <a asp-action="Index">Back to List</a>
                    <a asp-action="ManageUsers" asp-route-id="@Model.Id">Manage Users</a>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <label asp-for="Name"></label> <br />
                            <h3>@Html.DisplayFor(model => model.Name)</h3>
                        </div>
                        <div class="col">
                            <label asp-for="Description"></label> <br />
                            <h3>@Html.DisplayFor(model => model.Description)</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            @{
                Project currentProject = dbContext.Project.Include(p=>p.ProjectUsers).Include(p=>p.Tickets).Where(p=>p.Id == Model.Id).FirstOrDefault();
                CurrentPersonnelViewModel CPViewModel = new CurrentPersonnelViewModel(){
                    Id = currentProject.Id,
                    Name = currentProject.Name,
                    Description = currentProject.Description,     
                    ProjectUsers = currentProject.ProjectUsers               
                };
            }
            @{await Html.RenderPartialAsync("PartialViews/_CurrentPersonnelOnProject", @CPViewModel);}
           <!-- <partial name="PartialViews/_CurrentPersonnelOnProject" />-->
        </div>
        <div class="col">
            @{
                ProjectTicketsViewModel PTViewModel = new ProjectTicketsViewModel(){
                    Id = currentProject.Id,
                    Tickets = currentProject.Tickets
                };
            }
            @{await Html.RenderPartialAsync("PartialViews/_IssuesForProject", @PTViewModel);}
            <!--<partial name="" />-->
        </div>
    </div>
</div>